Среди классов выделил бы
1) Абстрактные классы. Наследовать данный класс можно, но невозможно создать экземпляры (объекты) данного класса.
2) Классы с модификатором доступа final. Данный класс невозможно наследовать, экземпляры возможно создать.
3) Классы, которые можно наследовать и создавать экземпляры.
Если класс содержит в своем коде другие классы, то такие классы классифицируются на:
- вложенные внутренние классы;
- вложенные статические классы;
- локальные классы;
- анонимные классы.

Отличие интерфейса от абстрактного класса:
- интерфейс описывает поведение объекта на основании методов, нет полей с данными. Абстрактный класс может иметь поля с данными, также имеет и методы.
- Абстрактный класс используется, чтобы связать родственные классы; интерфейс могут реализовывать классы, у которых нет ничего общего. В интерфейсе обычно ни один метод не реализован; в абстрактном классе классе также присутсвуют нереализованные методы, но также могут присутствовать и реализации методов, общих для всех классов наследников.
- Классы могут реализовывать сколько угодно интерфейсов, но наследовать могут только один класс.

В Java следующие модификаторы доступа:
- public: данные и методы видны другим классам из текущего пакета и из внешних пакетов.
- private: ограничие видимости данных и методов внутри одного класса.
- protected: даныне и методы видны в том же пакете, где находится наш класс. Также данные и методы видны наследникам нашего класса.
- default: даныне и методы видны в том же пакете, где находится наш класс.

Множественное наследование в Java запрещено.